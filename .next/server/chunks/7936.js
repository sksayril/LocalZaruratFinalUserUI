"use strict";exports.id=7936,exports.ids=[7936],exports.modules={7936:(o,e,r)=>{r.d(e,{RT:()=>a,hv:()=>n,pE:()=>s,th:()=>c});let t="https://api.localzarurat.com/api";async function s(){try{let o=await fetch(`${t}/customer/categories`,{method:"GET",headers:{"Content-Type":"application/json"},next:{revalidate:0}});if(!o.ok)throw Error(`HTTP error! status: ${o.status}`);let e=await o.json();if(!e.success)throw Error("API request was not successful");return e.data}catch(o){return console.error("Error fetching categories:",o),[]}}async function n(o){try{if(!o||""===o.trim())return console.error("Error: mainCategoryId is empty or invalid"),[];console.log("Fetching subcategories for mainCategoryId:",o);let e=`${t}/customer/categories/${o}/subcategories`;console.log("API URL:",e);let r=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json"},next:{revalidate:0}});if(console.log("Response status:",r.status),console.log("Response ok:",r.ok),!r.ok)throw Error(`HTTP error! status: ${r.status}`);let s=await r.json();if(console.log("API Response:",s),!s.success)throw Error("API request was not successful");return console.log("Subcategories found:",s.data.length),s.data}catch(o){return console.error("Error fetching subcategories:",o),[]}}async function a(o,e=1,r=10){try{if(!o||""===o.trim())throw console.error("Error: subcategoryId is empty or invalid"),Error("Invalid subcategory ID");console.log("Fetching vendors for subcategoryId:",o,"page:",e,"limit:",r);let s=`${t}/customer/subcategories/${o}/vendors?page=${e}&limit=${r}`;console.log("API URL:",s);let n=await fetch(s,{method:"GET",headers:{"Content-Type":"application/json"},next:{revalidate:0}});if(console.log("Response status:",n.status),console.log("Response ok:",n.ok),!n.ok)throw Error(`HTTP error! status: ${n.status}`);let a=await n.json();if(console.log("API Response:",a),!a.success)throw Error("API request was not successful");return console.log("Vendors found:",a.data.vendors.length),{data:a.data,pagination:a.pagination}}catch(o){throw console.error("Error fetching vendors:",o),o}}async function c(o){try{if(!o||""===o.trim())throw console.error("Error: vendorId is empty or invalid"),Error("Invalid vendor ID");console.log("Fetching vendor details for vendorId:",o);let e=`${t}/customer/vendors/${o}`;console.log("API URL:",e);let r=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json"},next:{revalidate:0}});if(console.log("Response status:",r.status),console.log("Response ok:",r.ok),!r.ok)throw Error(`HTTP error! status: ${r.status}`);let s=await r.json();if(console.log("API Response:",s),!s.success)throw Error("API request was not successful");return console.log("Vendor details found:",s.data.vendor.vendorDetails.shopName),s.data}catch(o){throw console.error("Error fetching vendor details:",o),o}}}};